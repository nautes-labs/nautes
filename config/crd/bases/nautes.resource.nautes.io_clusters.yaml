---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: clusters.nautes.resource.nautes.io
spec:
  group: nautes.resource.nautes.io
  names:
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.apiserver
      name: API SERVER
      type: string
    - jsonPath: .spec.usage
      name: USAGE
      type: string
    - jsonPath: .spec.hostcluster
      name: HOST
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Cluster is the Schema for the clusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterSpec defines the desired state of Cluster
            properties:
              apiServer:
                pattern: https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_\+.~#?&\/\/=]*)
                type: string
              clusterKind:
                default: kubernetes
                enum:
                - kubernetes
                type: string
              clusterType:
                enum:
                - physical
                - virtual
                type: string
              componentsList:
                description: ComponentsList declares the specific components used
                  by the cluster
                properties:
                  certManagement:
                    nullable: true
                    properties:
                      additions:
                        additionalProperties:
                          type: string
                        nullable: true
                        type: object
                      name:
                        minLength: 1
                        type: string
                      namespace:
                        minLength: 1
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                  deployment:
                    nullable: true
                    properties:
                      additions:
                        additionalProperties:
                          type: string
                        nullable: true
                        type: object
                      name:
                        minLength: 1
                        type: string
                      namespace:
                        minLength: 1
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                  eventListener:
                    nullable: true
                    properties:
                      additions:
                        additionalProperties:
                          type: string
                        nullable: true
                        type: object
                      name:
                        minLength: 1
                        type: string
                      namespace:
                        minLength: 1
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                  gateway:
                    nullable: true
                    properties:
                      additions:
                        additionalProperties:
                          type: string
                        nullable: true
                        type: object
                      name:
                        minLength: 1
                        type: string
                      namespace:
                        minLength: 1
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                  multiTenant:
                    nullable: true
                    properties:
                      additions:
                        additionalProperties:
                          type: string
                        nullable: true
                        type: object
                      name:
                        minLength: 1
                        type: string
                      namespace:
                        minLength: 1
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                  oauthProxy:
                    nullable: true
                    properties:
                      additions:
                        additionalProperties:
                          type: string
                        nullable: true
                        type: object
                      name:
                        minLength: 1
                        type: string
                      namespace:
                        minLength: 1
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                  pipeline:
                    nullable: true
                    properties:
                      additions:
                        additionalProperties:
                          type: string
                        nullable: true
                        type: object
                      name:
                        minLength: 1
                        type: string
                      namespace:
                        minLength: 1
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                  progressiveDelivery:
                    nullable: true
                    properties:
                      additions:
                        additionalProperties:
                          type: string
                        nullable: true
                        type: object
                      name:
                        minLength: 1
                        type: string
                      namespace:
                        minLength: 1
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                  secretManagement:
                    nullable: true
                    properties:
                      additions:
                        additionalProperties:
                          type: string
                        nullable: true
                        type: object
                      name:
                        minLength: 1
                        type: string
                      namespace:
                        minLength: 1
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                  secretSync:
                    nullable: true
                    properties:
                      additions:
                        additionalProperties:
                          type: string
                        nullable: true
                        type: object
                      name:
                        minLength: 1
                        type: string
                      namespace:
                        minLength: 1
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                type: object
              hostCluster:
                type: string
              primaryDomain:
                description: PrimaryDomain is used to build the domain of components
                  within the cluster
                type: string
              productAllowedClusterResources:
                additionalProperties:
                  items:
                    properties:
                      group:
                        minLength: 1
                        type: string
                      kind:
                        minLength: 1
                        type: string
                    required:
                    - group
                    - kind
                    type: object
                  type: array
                description: ReservedNamespacesAllowedProducts key is product name,
                  value is the list of cluster resources.
                nullable: true
                type: object
              reservedNamespacesAllowedProducts:
                additionalProperties:
                  items:
                    type: string
                  type: array
                description: ReservedNamespacesAllowedProducts key is namespace name,
                  value is the product name list witch can use namespace.
                nullable: true
                type: object
              usage:
                description: the usage of cluster, for user use it directry or deploy
                  vcluster on it
                enum:
                - host
                - worker
                type: string
              workerType:
                description: pipeline or deployment, when the cluster usage is 'worker',
                  the WorkType is required.
                enum:
                - ""
                - pipeline
                - deployment
                type: string
            required:
            - apiServer
            - clusterType
            - componentsList
            - usage
            type: object
          status:
            description: ClusterStatus defines the observed state of Cluster
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              entryPoints:
                additionalProperties:
                  properties:
                    httpPort:
                      description: The port of entry point service
                      format: int32
                      type: integer
                    httpsPort:
                      format: int32
                      type: integer
                    type:
                      type: string
                  type: object
                type: object
              mgtAuthStatus:
                properties:
                  lastSuccessSpec:
                    type: string
                  lastSuccessTime:
                    format: date-time
                    type: string
                  secretID:
                    type: string
                required:
                - lastSuccessSpec
                - lastSuccessTime
                - secretID
                type: object
              productIDMap:
                additionalProperties:
                  type: string
                description: PruoductIDMap records the corresponding relationship
                  between product name and product in kubernetes.
                type: object
              sync2ArgoStatus:
                properties:
                  lastSuccessSpec:
                    type: string
                  lastSuccessTime:
                    format: date-time
                    type: string
                  secretID:
                    type: string
                required:
                - lastSuccessSpec
                - lastSuccessTime
                - secretID
                type: object
              warnings:
                items:
                  properties:
                    from:
                      description: From is which operator recorded this warning.
                      type: string
                    id:
                      description: ID records the unique identifier of the warning.
                      type: string
                    message:
                      type: string
                    type:
                      type: string
                  required:
                  - from
                  - id
                  - message
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
