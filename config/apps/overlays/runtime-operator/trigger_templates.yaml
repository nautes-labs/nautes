apiVersion: v1
kind: ConfigMap
metadata:
  name: nautes-configs
  namespace: system
data:
  base: |
    apiVersion: tekton.dev/v1beta1
    kind: PipelineRun
    metadata:
      generateName: init-pipiline-
      namespace: {{ .runtimeNamespace }}
    spec:
      params:
        - name: PIPELINE-REVISION
          value: main
        {{- if eq .isCodeRepoTrigger "true" }}
        - name: REVISION
          value: main
        {{- end }}
        - name: runfile
          value: {{ .pipelinePath }}
      taskRunSpecs:
        - pipelineTaskName: git-clone
          taskServiceAccountName: {{ .serviceAccountName }}
          metadata:
            annotations:
              vault.hashicorp.com/agent-inject: 'true'
              vault.hashicorp.com/tls-secret: "ca"
              vault.hashicorp.com/ca-cert: "/vault/tls/ca.crt"
              vault.hashicorp.com/agent-pre-populate-only: "true"
              vault.hashicorp.com/role: '{{ .runtimeName }}'
              vault.hashicorp.com/agent-run-as-user: '0'
              vault.hashicorp.com/agent-run-as-group: '0'
              vault.hashicorp.com/agent-inject-secret-id_ecdsa: "git/data/{{ .pipelineRepoProviderType }}/{{ .pipelineRepoID }}/default/readonly"
              vault.hashicorp.com/secret-volume-path-id_ecdsa: "/root/.ssh"
              vault.hashicorp.com/agent-inject-perms-id_ecdsa: '0400'
              vault.hashicorp.com/agent-inject-template-id_ecdsa: |
                {{ "{{-" }} with secret "git/data/{{ .pipelineRepoProviderType }}/{{ .pipelineRepoID }}/default/readonly" {{ "-}}" }}
                {{ "{{" }} .Data.data.deploykey {{ "}}" }}
                {{ "{{-" }} end {{ "-}}" }}
        - pipelineTaskName: pipeline-run
          taskServiceAccountName: {{ .serviceAccountName }}
      pipelineSpec:
        params:
          - name: PIPELINE-REVISION
          {{- if eq .isCodeRepoTrigger "true" }}
          - name: REVISION
          {{- end }}
          - name: runfile
        tasks:
          - name: git-clone
            taskRef:
              name: git-clone
              kind: ClusterTask
            workspaces:
              - name: output
                workspace: source-volume
            params:
              - name: url
                value: {{ .pipelineRepoURL }}
              - name: revision
                value: $(params.PIPELINE-REVISION)
          - name: pipeline-run
            runAfter:
              - git-clone
            taskRef:
              name: kubernetes-actions
              kind: ClusterTask
            params:
              - name: image
                value: ghcr.io/nautes-labs/kubectl:v1.27.3-alpine-v3.18-v2
              - name: script
                value: |
                  SUFFIX=`openssl rand -hex 2`
                  cat > ./kustomization.yaml << EOF
                  apiVersion: kustomize.config.k8s.io/v1beta1
                  kind: Kustomization
                  resources:
                  - $(params.runfile)
                  nameSuffix: -n${SUFFIX}
                  {{- if .pipelineLabel }}
                  commonLabels:
                    nautes-pipeline-selector: {{ .pipelineLabel }}
                  {{ end }}
                  {{- if eq .isCodeRepoTrigger "true" }}
                  patchesStrategicMerge:
                  - patch: |-
                      - op: replace
                        path: /spec/params/0/value
                        value: $(params.REVISION)
                    target:
                      kind: PipelineRun
                  {{- end }}
                  EOF
                  cat ./kustomization.yaml
                  kubectl kustomize . | kubectl -n {{ .runtimeName }} create -f -
            workspaces:
              - name: manifest-dir
                workspace: source-volume
        workspaces:
          - name: source-volume
      workspaces:
        - name: source-volume
          volumeClaimTemplate:
            spec:
              accessModes:
                - ReadWriteOnce
              resources:
                requests:
                  storage: 10M
