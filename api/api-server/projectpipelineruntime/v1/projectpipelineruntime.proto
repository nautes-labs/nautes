// Copyright 2023 Nautes Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package api.projectpipelineruntime.v1;

option go_package = "github.com/nautes-labs/api-server/api/projectpipelineruntime/v1;v1";

import "google/api/annotations.proto";
import "validate/validate.proto";


service ProjectPipelineRuntime {
  rpc GetProjectPipelineRuntime (GetRequest) returns (GetReply) {
    option (google.api.http) = {
      get: "/api/v1/products/{product_name}/projectpipelineruntimes/{project_pipeline_runtime_name}"
    };
  }
  rpc ListProjectPipelineRuntimes (ListsRequest) returns (ListsReply) {
    option (google.api.http) = {
      get: "/api/v1/products/{product_name}/projectpipelineruntimes"
    };
  }
  rpc SaveProjectPipelineRuntime (SaveRequest) returns (SaveReply) {
    option (google.api.http) = {
      post: "/api/v1/products/{product_name}/projectpipelineruntimes/{project_pipeline_runtime_name}"
      body: "body"
    };
  }
  rpc DeleteProjectPipelineRuntime (DeleteRequest) returns (DeleteReply) {
    option (google.api.http) = {
      delete: "/api/v1/products/{product_name}/projectpipelineruntimes/{project_pipeline_runtime_name}"
    };
  }
}

// Defines the event source for triggering a pipeline.
message Calendar {
  // Schedule is a cron-like expression. For reference, see: https://en.wikipedia.org/wiki/Cron
  string schedule = 1 [json_name = "schedule"];
  // Interval is a string that describes an interval duration, e.g. 1s, 30m, 2h...
  string interval = 2 [json_name = "interval"];
  // ExclusionDates defines the list of DATE-TIME exceptions for recurring events.
  repeated string exclusion_dates = 3 [json_name = "exclusion_dates"];
  // Timezone in which to run the schedule
  string timezone = 4 [json_name = "timezone"];
}

message Gitlab {
  // Gitlab project name.
  string repo_name = 1 [json_name = "repo_name", (validate.rules).string.min_len = 1];
  // Supports regular expressions.
  string revision = 2 [json_name = "revision", (validate.rules).string.min_len = 1];
  // Gitlab webhook events: push_events, tag_push_events, etc.
  repeated string events = 3 [json_name = "events"];
}

// Defines the types of event sources that can trigger a pipeline.
message EventSource {
  // Name of the event source.
  string name = 1 [json_name = "name", (validate.rules).string.min_len = 1];
  // Gitlab event source for triggering the pipeline.
  Gitlab gitlab = 2 [json_name = "gitlab"];
  // Calendar event source for triggering the pipeline.
  Calendar calendar = 3 [json_name = "calendar"];
}

// Defines a pipeline and its associated event sources.
message Pipeline {
  // Name of the pipeline.
  string name = 1 [json_name = "name", (validate.rules).string.min_len = 1];
  // Default is 'default'.
  string label = 2 [json_name = "label"];
  // Pipeline manifest path, wildcard support.
  string path = 3 [json_name = "path", (validate.rules).string.min_len = 1];
}

message PipelineTriggers {
  // Key of the event source.
  string event_source = 1 [json_name = "event_source", (validate.rules).string.min_len = 1];
  // Key of the pipeline.
  string pipeline = 2 [json_name = "pipeline", (validate.rules).string.min_len = 1];
  // Regular expressions are not supported, If it is empty, the trigger will determine the revision of the pipeline based on the revision of the event source
  string revision = 3 [json_name = "revision"];
}

// Hooks are hooks will to add before or after the user pipeline.
message Hooks {
  // PreHooks is a set of hooks to be executed before running the user pipeline.
  repeated Hook pre_hooks = 1 [json_name = "pre_hooks"];
  // PostHooks is a set of hooks that will run after the user pipeline starts executing.
  repeated Hook post_hooks = 2 [json_name = "post_hooks"];
}

// Hook is a record of information about a runnable hook.
message Hook {
  // Name is the name of the hook to be executed.
  string name = 1;
  // Vars is the parameter that the user wants to pass to the hook,
	// and the input items are determined based on the pipeline component in cluster.
  map<string, string> vars = 2;
  // Alias is the alias given by the user for the hook.
	// If the user does not enter this value, the name of the hook will be obtained from 'name'.
	// When the hook appears in both PreHooks and PostHooks, it is necessary to specify the name to prevent conflicts.
	// +optional
	string alias = 3;
}

message ProjectPipelineDestination {
  // Environment for pipeline deployment.
  string environment = 1 [json_name = "environment", (validate.rules).string.min_len = 1];
  // Set the namespace for the pipeline.
  string namespace = 2 [json_name = "namespace"];
}

message ProjectPipelineRuntimeAdditionalResources {
  // ProjectPipelineRuntimeAdditionalResourcesGit defines the additional resources if it comes from git
  ProjectPipelineRuntimeAdditionalResourcesGit git = 1 [json_name = "git"];
}

message ProjectPipelineRuntimeAdditionalResourcesGit {
  string coderepo = 1 [json_name="coderepo"];
  // If git repo is a public repo, use url instead
  string url = 2 [json_name = "url"];
  string revision = 3 [json_name = "revision"];
  string path = 4 [json_name = "path"];
}

// Request message format for getting pipeline information.
message GetRequest {
  // Name of the product associated with the pipeline.
  string product_name = 1 [json_name = "product_name"];
  // Name of the pipeline runtime environment.
  string project_pipeline_runtime_name = 2 [json_name = "project_pipeline_runtime_name"];
}

// Response message format for getting pipeline information.
message GetReply {
  // Name of the pipeline.
  string name = 1 [json_name = "name"];
  // Name of the project associated with the pipeline.
  string project = 2 [json_name = "project"];
  // Configuration repository of the pipeline.
  string pipeline_source = 3 [json_name = "pipeline_source"];
  // Other repositories outside the pipeline (optional).
  repeated EventSource event_sources = 4 [json_name = "event_sources"];
  // Pipelines associated with the product.
  repeated Pipeline pipelines = 5 [json_name = "pipelines"];
  // Pipeline event triggers.  
  repeated PipelineTriggers pipeline_triggers = 6 [json_name = "pipeline_triggers"];
  // Target deployment environment.
  ProjectPipelineDestination destination = 7 [json_name = "destination"];
  // Isolation definition of pipeline runtime related resources: shared(default) or exclusive.
  string isolation = 8 [json_name = "isolation"];
  // ProjectPipelineRuntimeAdditionalResources defines the additional resources witch runtime needed
  ProjectPipelineRuntimeAdditionalResources additional_resources = 9 [json_name = "additional_resources"];
  // Account specify the runtime account.
  string account = 10 [json_name = "account"];
  // Hooks are hooks will to add before or after the user pipeline.
  Hooks hooks = 11 [json_name = "hooks"];
}

// Request message format for listing pipelines.
message ListsRequest {
  // To list the product name of the repository.
  string product_name = 1 [json_name = "product_name"];
  // Filter the list by field.
  // eg: field_selector=project=project1,pipeline_source=pipeline_repository,destination=env1
  // Field Support:
  // project: fuzzy match 
  // pipeline_source: fuzzy match
  // destination: fuzzy match 
  string field_selector = 2 [json_name = "field_selector"];
}

// Response message format for listing pipelines.
message ListsReply {
  // List of pipelines.
  repeated GetReply items = 1;
}

// Proto message for saving a pipeline configuration request.
message SaveRequest {
  // Message containing the body of the request.
  message Body {
    // Name of the project associated with the pipeline.
    string project = 1 [json_name = "project", (validate.rules).string.min_len = 1];
    // The code repo for pipeline manifests.
    string pipeline_source = 2 [json_name = "pipeline_source", (validate.rules).string.min_len = 1];
    // The definition of pipeline.
    repeated Pipeline pipelines = 3 [json_name = "pipelines", (validate.rules).repeated.min_items = 1];
    // Events source that may trigger the pipeline.
    repeated EventSource event_sources = 4 [json_name = "event_sources", (validate.rules).repeated.min_items = 1];
    // Pipeline event triggers.
    repeated PipelineTriggers pipeline_triggers = 5 [json_name = "pipeline_triggers", (validate.rules).repeated.min_items = 1];
    // The definition of pipeline.
    ProjectPipelineDestination destination = 6 [json_name = "destination"];
    // Isolation definition of pipeline runtime related resources: shared(default) or exclusive
    string isolation = 7 [json_name = "isolation", (validate.rules).string = {in: ["shared", "exclusive"]}];
    // ProjectPipelineRuntimeAdditionalResources defines the additional resources witch runtime needed
    ProjectPipelineRuntimeAdditionalResources additional_resources = 8 [json_name = "additional_resources"];
    // Account specify the runtime account.
    string account = 9 [json_name = "account"];
    // Hooks are hooks will to add before or after the user pipeline.
    Hooks hooks = 10 [json_name = "hooks"];
  }
  // Name of the product associated with the pipeline.
  string product_name = 1 [json_name = "product_name"];
  // Name of the pipeline runtime associated with the project.
  string project_pipeline_runtime_name = 2 [json_name = "project_pipeline_runtime_name"];
  // Whether to skip checking global resource detection when making requests.
  bool insecure_skip_check = 3 [json_name = "insecure_skip_check"];
  // The body of the request.
  Body body = 4;
}

// Proto message for the response to a save pipeline configuration request.
message SaveReply {
  // A message describing the status of the save request.
  string msg = 1 [json_name = "message"];
}

// Proto message for deleting a pipeline configuration request.
message DeleteRequest {
  // Name of the product associated with the pipeline.
  string product_name = 1 [json_name = "product_name"];
  // Name of the pipeline runtime associated with the project.
  string project_pipeline_runtime_name = 2 [json_name = "project_pipeline_runtime_name"];
  // Whether to skip checking global resource detection when making requests.
  bool insecure_skip_check = 3 [json_name = "insecure_skip_check"];
}

// Proto message for the response to a delete pipeline configuration request.
message DeleteReply {
  // A message describing the status of the delete request.
  string msg = 1 [json_name = "message"];
}
