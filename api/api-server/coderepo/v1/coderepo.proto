// Copyright 2023 Nautes Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package api.coderepo.v1;

option go_package = "github.com/nautes-labs/api-server/api/coderepo/v1;v1";

import "google/api/annotations.proto";
import "validate/validate.proto";


service CodeRepo {
  rpc GetCodeRepo (GetRequest) returns (GetReply) {
    option (google.api.http) = {
      get: "/api/v1/products/{product_name}/coderepos/{coderepoName}"
    };
  }
  rpc ListCodeRepos (ListsRequest) returns (ListsReply) {
    option (google.api.http) = {
      get: "/api/v1/products/{product_name}/coderepos"
    };
  }
  rpc SaveCodeRepo (SaveRequest) returns (SaveReply) {
    option (google.api.http) = {
      post: "/api/v1/products/{product_name}/coderepos/{coderepoName}"
      body: "body"
    };
  }
  rpc DeleteCodeRepo (DeleteRequest) returns (DeleteReply) {
    option (google.api.http) = {
      delete: "/api/v1/products/{product_name}/coderepos/{coderepoName}"
    };
  }
}


// Request message for listing items
message ListsRequest {
  // To list the product name of the repository.
  string product_name = 1 [json_name = "product_name"];
  // Filter the list by field.
  // eg: field_selector=project=project1,pipeline_runtime=true,deployment_runtime=false
  // Field Support:
  // project: fuzzy match
  // pipeline_runtime: exact match
  // deployment_runtime: exact match
  string field_selector = 2 [json_name = "field_selector"];
}

// Message representing a webhook
message Webhook {
  // The events that the webhook should trigger on
  repeated string Events = 1 [json_name = "events"];
}

// Message representing a GitLab repository
message Gitlab {
  // The name of the repository
  string name = 1 [json_name = "name"];
  // The path of the repository
  string path = 2 [json_name = "path"];
  // The visibility of the repository
  string visibility = 3 [json_name = "visibility", (validate.rules).string = {in: ["public", "private"]}];
  // The description of the repository
  string description = 4 [json_name = "description"];
}

// Message representing a GitHub repository
message Github {
  // The name of the repository
  string name = 1 [json_name = "name", (validate.rules).string.min_len = 1];
  // The path of the repository
  string path = 2 [json_name = "path", (validate.rules).string.min_len = 1];
  // The visibility of the repository
  string visibility = 3 [json_name = "visibility", (validate.rules).string = {in: ["public", "private"]}];
  // The description of the repository
  string description = 4 [json_name = "description"];
}

// Message representing a GitLab project
message GitlabProject {
  // The name of the project
  string name = 1 [json_name = "name", (validate.rules).string.min_len = 1];
  // The path of the project
  string path = 2 [json_name = "path", (validate.rules).string.min_len = 1];
  // The visibility of the project
  string visibility = 3 [json_name = "visibility", (validate.rules).string = {in: ["public", "private"]}];
  // The description of the project
  string description = 4 [json_name = "description"];
  // The SSH URL of the repository
  string ssh_url_to_repo = 5 [json_name = "ssh_url_to_repo"];
  // The HTTP URL of the repository
  string http_url_to_repo = 6 [json_name = "http_url_to_repo"]; 
}

// Message representing a GitHub project
message GithubProject {
  // The name of the project
  string name = 1 [json_name = "name", (validate.rules).string.min_len = 1];
  // The path of the project
  string path = 2 [json_name = "path", (validate.rules).string.min_len = 1];
  // The visibility of the project
  string visibility = 3 [json_name = "visibility", (validate.rules).string = {in: ["public", "private"]}];
  // The description of the project
  string description = 4 [json_name = "description"];
  // The SSH URL of the repository
  string ssh_url_to_repo = 5 [json_name = "ssh_url_to_repo"];
  // The HTTP URL of the repository
  string http_url_to_repo = 6 [json_name = "http_url_to_repo"];
}

// Define the GitProject message, which includes the GitlabProject and GithubProject fields.
message GitProject {
  GitlabProject gitlab = 1 [json_name = "gitlab"]; // The GitlabProject field.
  GithubProject github = 2 [json_name = "github"]; // The GithubProject field.
}

// Define the Git message, which includes the Gitlab and Github fields.
message Git {
  Gitlab gitlab = 1 [json_name = "gitlab"]; // The Gitlab field.
  Github github = 2 [json_name = "github"]; // The Github field.
}

// Define the GetRequest message, which includes the product_name and coderepoName fields.
message GetRequest {
  string product_name = 1 [json_name = "product_name"]; // The product_name field.
  string coderepoName = 2 [json_name = "coderepo_name"]; // The coderepoName field.
}

// Define the GetReply message, which includes the product, name, project, webhook, DeploymentRuntime, PipelineRuntime, and GitProject fields.
message GetReply {
  string product = 1 [json_name = "product"]; 
  string name = 2 [json_name = "name"]; 
  string project = 3 [json_name = "project"]; 
  Webhook webhook = 4 [json_name = "webhook"]; 
  bool DeploymentRuntime = 5 [json_name = "deployment_runtime"]; 
  bool PipelineRuntime = 6 [json_name = "pipeline_runtime"]; 
  GitProject git = 7 [json_name = "git"]; 
}

// Define the ListsReply message, which includes the repeated items field.
message ListsReply {
  repeated GetReply items = 1; 
}

// Define the SaveRequest message, which includes the product_name, coderepoName, insecureSkipCheck, and Body fields.
message SaveRequest { 
  message Body {
    string project = 1 [json_name = "project"]; 
    Webhook webhook = 2 [json_name = "webhook"]; 
    bool DeploymentRuntime = 3 [json_name = "deployment_runtime"]; 
    bool PipelineRuntime = 4 [json_name = "pipeline_runtime"]; 
    // You must fill in the parameters related to gitlab or github
    Git git = 5 [json_name = "git", (validate.rules).message.required = true]; 
  }
  string product_name = 1 [json_name = "product_name"]; 
  string coderepoName = 2 [json_name = "coderepo_name"]; 
  bool insecureSkipCheck = 3 [json_name = "insecure_skip_check"]; 
  Body body = 4; 
}

// Define the SaveReply message, which includes the msg field.
message SaveReply {
  // Msg is a message confirming the save.  
  string msg = 1 [json_name = "message"]; // The msg field.
}

// Represents a request to delete a codeRepo manifest.
message DeleteRequest {
  string product_name = 1 [json_name = "product_name"];
  string coderepoName = 2 [json_name = "coderepo_name"];
  bool insecureSkipCheck = 3 [json_name = "insecure_skip_check"];  
}

// Represents a response to a DeleteRequest message.
message DeleteReply {
  string msg = 1 [json_name = "message"];
}
