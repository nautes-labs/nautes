// Code generated by MockGen. DO NOT EDIT.
// Source: ./pkg/argocd_client/cluster.go

// Package argocd is a generated GoMock package.
package argocd

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockClusterOperation is a mock of ClusterOperation interface.
type MockClusterOperation struct {
	ctrl     *gomock.Controller
	recorder *MockClusterOperationMockRecorder
}

// MockClusterOperationMockRecorder is the mock recorder for MockClusterOperation.
type MockClusterOperationMockRecorder struct {
	mock *MockClusterOperation
}

// NewMockClusterOperation creates a new mock instance.
func NewMockClusterOperation(ctrl *gomock.Controller) *MockClusterOperation {
	mock := &MockClusterOperation{ctrl: ctrl}
	mock.recorder = &MockClusterOperationMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClusterOperation) EXPECT() *MockClusterOperationMockRecorder {
	return m.recorder
}

// CreateCluster mocks base method.
func (m *MockClusterOperation) CreateCluster(clusterInstance *ClusterInstance) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateCluster", clusterInstance)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateCluster indicates an expected call of CreateCluster.
func (mr *MockClusterOperationMockRecorder) CreateCluster(clusterInstance interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateCluster", reflect.TypeOf((*MockClusterOperation)(nil).CreateCluster), clusterInstance)
}

// DeleteCluster mocks base method.
func (m *MockClusterOperation) DeleteCluster(clusterURL string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteCluster", clusterURL)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteCluster indicates an expected call of DeleteCluster.
func (mr *MockClusterOperationMockRecorder) DeleteCluster(clusterURL interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteCluster", reflect.TypeOf((*MockClusterOperation)(nil).DeleteCluster), clusterURL)
}

// GetCluster mocks base method.
func (m *MockClusterOperation) GetCluster(clusterURL string) (*ClusterData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCluster", clusterURL)
	ret0, _ := ret[0].(*ClusterData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCluster indicates an expected call of GetCluster.
func (mr *MockClusterOperationMockRecorder) GetCluster(clusterURL interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCluster", reflect.TypeOf((*MockClusterOperation)(nil).GetCluster), clusterURL)
}

// GetClusterInfo mocks base method.
func (m *MockClusterOperation) GetClusterInfo(clusterURL string) (*ClusterResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetClusterInfo", clusterURL)
	ret0, _ := ret[0].(*ClusterResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetClusterInfo indicates an expected call of GetClusterInfo.
func (mr *MockClusterOperationMockRecorder) GetClusterInfo(clusterURL interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClusterInfo", reflect.TypeOf((*MockClusterOperation)(nil).GetClusterInfo), clusterURL)
}

// UpdateCluster mocks base method.
func (m *MockClusterOperation) UpdateCluster(clusterInstance *ClusterInstance) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateCluster", clusterInstance)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateCluster indicates an expected call of UpdateCluster.
func (mr *MockClusterOperationMockRecorder) UpdateCluster(clusterInstance interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateCluster", reflect.TypeOf((*MockClusterOperation)(nil).UpdateCluster), clusterInstance)
}
